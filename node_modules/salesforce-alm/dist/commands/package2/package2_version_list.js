/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
/* eslint global-require: 0 */
'use strict';
const path = require('path');
const messages = require(path.join(__dirname, '..', '..', 'lib', 'messages'))();
const consts = require(path.join(__dirname, '..', '..', 'lib', 'constants'));
module.exports = function (_execCommand) {
    return {
        description: messages.getMessage('cliDescription', [], 'package2_version_list'),
        longDescription: messages.getMessage('cliLongDescription', [], 'package2_version_list'),
        help: messages.getMessage('help', [], 'package2_version_list'),
        requiresProject: false,
        orgType: consts.DEFAULT_DEV_HUB_USERNAME,
        supportsTargetDevHubUsername: true,
        flags: [{
                name: 'createdlastdays',
                char: 'c',
                description: messages.getMessage('createdLastDaysDescription', [], 'package2'),
                longDescription: messages.getMessage('createdLastDaysLongDescription', [], 'package2'),
                hasValue: true,
                required: false,
                type: 'number'
            },
            {
                name: 'concise',
                description: messages.getMessage('conciseDescription', [], 'package2_version_list'),
                longDescription: messages.getMessage('conciseLongDescription', [], 'package2_version_list'),
                hidden: false
            },
            {
                name: 'modifiedlastdays',
                char: 'm',
                description: messages.getMessage('modifiedLastDaysDescription', [], 'package2'),
                longDescription: messages.getMessage('modifiedLastDaysLongDescription', [], 'package2'),
                hasValue: true,
                required: false,
                type: 'number'
            },
            {
                name: 'package2ids',
                char: 'i',
                description: messages.getMessage('package2IdsDescription', [], 'package2_version_list'),
                longDescription: messages.getMessage('package2IdsLongDescription', [], 'package2_version_list'),
                hasValue: true,
                required: false,
                type: 'string',
                array: true
            },
            {
                name: 'released',
                char: 'r',
                description: messages.getMessage('releasedDescription', [], 'package2_version_list'),
                longDescription: messages.getMessage('releasedLongDescription', [], 'package2_version_list'),
                hasValue: false,
                required: false,
                type: 'flag'
            },
            {
                name: 'orderby',
                char: 'o',
                description: messages.getMessage('orderByDescription', [], 'package2_version_list'),
                longDescription: messages.getMessage('orderByLongDescription', [], 'package2_version_list'),
                hasValue: true,
                required: false,
                type: 'string',
                array: true
            },
            {
                name: 'verbose',
                description: messages.getMessage('verboseDescription', [], 'package2_version_list'),
                longDescription: messages.getMessage('verboseLongDescription', [], 'package2_version_list'),
                hidden: false
            }
        ],
        /**
         * the heroku cli hook
         * @param context - the cli context
         * @returns {Promise}
         */
        run(context) {
            const Package2VersionListCommand = require(path.join('..', '..', 'lib', 'package2', 'package2VersionListCommand'));
            return _execCommand(new Package2VersionListCommand(), context);
        }
    };
};

//# sourceMappingURL=package2_version_list.js.map
