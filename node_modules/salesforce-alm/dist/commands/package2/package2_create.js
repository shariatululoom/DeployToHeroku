/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
/* eslint global-require: 0 */
'use strict';
const path = require('path');
const messages = require(path.join(__dirname, '..', '..', 'lib', 'messages'))();
const consts = require(path.join(__dirname, '..', '..', 'lib', 'constants'));
module.exports = function (_execCommand) {
    return {
        description: messages.getMessage('cliDescription', [], 'package2_create'),
        longDescription: messages.getMessage('cliLongDescription', [], 'package2_create'),
        help: messages.getMessage('help', [], 'package2_create'),
        orgType: consts.DEFAULT_DEV_HUB_USERNAME,
        supportsTargetDevHubUsername: true,
        flags: [
            {
                name: 'name',
                char: 'n',
                description: messages.getMessage('name', [], 'package2_create'),
                longDescription: messages.getMessage('nameLong', [], 'package2_create'),
                hasValue: true,
                required: true,
                type: 'string'
            },
            {
                name: 'containeroptions',
                char: 'o',
                description: messages.getMessage('containerOptions', [], 'package2_create'),
                longDescription: messages.getMessage('containerOptionsLong', [], 'package2_create'),
                hasValue: true,
                required: false,
                type: 'string'
            },
            {
                name: 'description',
                char: 'd',
                description: messages.getMessage('description', [], 'package2_create'),
                longDescription: messages.getMessage('descriptionLong', [], 'package2_create'),
                hasValue: true,
                required: false,
                type: 'string'
            },
            {
                name: 'nonamespace',
                char: 'e',
                description: messages.getMessage('noNamespace', [], 'package2_create'),
                longDescription: messages.getMessage('noNamespaceLong', [], 'package2_create'),
                hasValue: false,
                required: false,
                type: 'flag'
            }
        ],
        /**
         * the heroku cli hook
         * @param context - the cli context
         * @returns {Promise}
         */
        run(context) {
            const Package2CreateCommand = require(path.join('..', '..', 'lib', 'package2', 'package2CreateCommand'));
            return _execCommand(new Package2CreateCommand(), context);
        }
    };
};

//# sourceMappingURL=package2_create.js.map
