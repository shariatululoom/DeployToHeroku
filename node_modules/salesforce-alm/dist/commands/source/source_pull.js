/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
/* eslint global-require: 0 */
'use strict';
const path = require('path');
const messages = require(path.join(__dirname, '..', '..', 'lib', 'messages'))();
const consts = require(path.join('..', '..', 'lib', 'constants'));
module.exports = function (_execCommand) {
    return {
        description: messages.getMessage('pullCommandCliDescription'),
        longDescription: messages.getMessage('pullCommandCliDescriptionLong'),
        help: messages.getMessage('pullCommandCliHelp'),
        showProgress: true,
        supportsTargetUsername: true,
        flags: [
            {
                name: 'wait',
                char: 'w',
                description: messages.getMessage('mdapiCliWait', consts.DEFAULT_SRC_WAIT_MINUTES),
                longDescription: messages.getMessage('pullCommandWaitOptionDescriptionLong'),
                required: false,
                hasValue: true,
                type: 'minutes',
                default: consts.DEFAULT_SRC_WAIT_MINUTES,
                min: consts.MIN_SRC_WAIT_MINUTES
            },
            {
                name: 'forceoverwrite',
                char: 'f',
                description: messages.getMessage('pullCommandForceOptionDescription'),
                longDescription: messages.getMessage('pullCommandForceOptionDescriptionLong'),
                required: false,
                type: 'flag'
            }
        ],
        /**
         * the heroku cli hook
         * @param context - the cli context
         * @returns {Promise}
         */
        run(context) {
            const MdapiPullCommand = require(path.join(__dirname, '..', '..', 'lib', 'mdapiPullCommand'));
            return _execCommand(new MdapiPullCommand(), context);
        }
    };
};

//# sourceMappingURL=source_pull.js.map
