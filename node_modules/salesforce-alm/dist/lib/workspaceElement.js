/*
 * Copyright (c) 2017, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * This class represents the info for a sourcePath in the workspace
 */
class WorkspaceElement {
    constructor(typeDef, fullName, sourcePath, state, isStandardMember) {
        this.typeDef = typeDef;
        this.fullName = fullName;
        this.sourcePath = sourcePath;
        this.state = state;
        this.isStandardMember = isStandardMember;
    }
    /**
     * Gets the typeDef for the workspace element - in the case of decomposition, this would be the type def for the
     * decomposed element (ex. CustomField)
     * @returns {any}
     */
    getTypeDef() {
        return this.typeDef;
    }
    /**
     * Gets the fullName for the workspace element - in the case of decomposition, this would be the fullName of the
     * decomposed element (ex. for CustomField this would be 'CustomObjectName__c.CustomFieldName__c'
     * @returns {string}
     */
    getFullName() {
        return this.fullName;
    }
    /**
     * Gets the source state of the workspace element
     * @returns {string}
     */
    getState() {
        return this.state;
    }
    /**
     * Gets the full path to the element in the workspace
     * @returns {string}
     */
    getSourcePath() {
        return this.sourcePath;
    }
    /**
     * Returns true if the workspace element is a standard member on an entity
     * @returns {string}
     */
    getIsStandardMember() {
        return this.isStandardMember;
    }
}
exports.WorkspaceElement = WorkspaceElement;

//# sourceMappingURL=workspaceElement.js.map
