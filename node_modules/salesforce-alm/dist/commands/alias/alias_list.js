/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
/* eslint global-require: 0 */
'use strict';
// Node
const path = require('path');
// Local
const messages = require(path.join(__dirname, '..', '..', 'lib', 'messages'))();
module.exports = function (_execCommand) {
    return {
        description: messages.getMessage('description', [], 'aliasListCommand'),
        longDescription: messages.getMessage('longDescription', [], 'aliasListCommand'),
        help: messages.getMessage('help', [], 'aliasListCommand'),
        requiresProject: false,
        flags: [],
        /**
         * the heroku cli hook
         * @param context - the cli context
         * @returns {*  }
         */
        run(context) {
            const _ = require('lodash');
            const logger = require(path.join(__dirname, '..', '..', 'lib', 'logApi'));
            const Alias = require(path.join(__dirname, '..', '..', 'lib', 'alias'));
            return _execCommand({
                execute: execContext => Alias.list(execContext.flags.group)
                    .then(aliases => {
                    logger.styledHeader(logger.color.blue('Alias List'));
                    return _.map(aliases, (value, alias) => ({ alias, value }));
                }),
                getColumnData: () => [
                    { key: 'alias', label: 'Alias' },
                    { key: 'value', label: 'Value' }
                ]
            }, context);
        }
    };
};

//# sourceMappingURL=alias_list.js.map
