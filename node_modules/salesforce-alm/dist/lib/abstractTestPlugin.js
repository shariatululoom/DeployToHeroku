/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
'use strict';
const process_promises = require('process-promises');
const AbstractTestPlugin = {
    schema() {
        return '';
    },
    validate() {
        return true;
    },
    getLib() {
        throw new Error('Method \'getLib()\' should be implemented by subclass.');
    },
    opts(opts) {
        return opts;
    },
    run(name, logger, args, opts) {
        const lib = this.getLib();
        logger.debugLog(`fork(${lib}(${args.join})`);
        opts = this.opts(opts);
        opts.silent = true;
        return process_promises.fork(lib, args, this.opts(opts))
            .on('process', (process) => {
            logger.log(`[${name}] PID: ${process.pid}`);
        })
            .on('stdout', (data) => {
            logger.log(`[${name}] stdout: ${data}`);
        })
            .on('stderr', (data) => {
            logger.log(`[${name}] stderr: ${data}`);
        })
            .then((result) => result.exitCode)
            .catch((err) => {
            throw err;
        });
    }
};
module.exports = AbstractTestPlugin;

//# sourceMappingURL=abstractTestPlugin.js.map
