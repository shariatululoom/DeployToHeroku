"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
const messages = require("../../lib/messages");
const CommandRegistry = require("../../lib/commandRegistry");
module.exports = function (_execCommand) {
    const { getMessage } = messages();
    return {
        command: 'user:display',
        description: getMessage('description', [], 'user_display'),
        longDescription: getMessage('longDescription', [], 'user_display'),
        help: getMessage('help', [], 'user_display'),
        requiresProject: false,
        supportsTargetUsername: true,
        flags: [
            CommandRegistry.TARGET_DEV_HUB_USERNAME_PARAMETER,
        ],
        run(context) {
            return __awaiter(this, void 0, void 0, function* () {
                const UserDisplayCommand = require('../../lib/user/userDisplayCommand').UserDisplayCommand;
                return yield _execCommand(new UserDisplayCommand(), context);
            });
        }
    };
};

//# sourceMappingURL=user_display.js.map
