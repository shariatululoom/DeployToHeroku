/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
'use strict';
const path = require('path');
const messages = require(path.join(__dirname, '..', 'messages'))();
const LightningTestApi = require(path.join(__dirname, 'lightningTestApi'));
const Promise = require('bluebird');
const _ = require('lodash');
class LightningTestCommand {
    validate(context) {
        this.org = context.org;
        const options = context.flags;
        return this.org.getConfig()
            .then(config => {
            if (config.devHubUsername) {
                return Promise.resolve(options);
            }
            return Promise.reject(messages.getMessage('scratchOrgOnly', [], 'lightning_test'));
        });
    }
    execute(context) {
        const testApi = new LightningTestApi(this.org);
        return testApi.initialize(context)
            .then(() => testApi.runTests())
            .then(res => {
            // If any tests failed, change the exit code to 100
            if (_.get(res, 'summary.failing')) {
                process.exitCode = 100;
            }
            return res;
        });
    }
}
module.exports = LightningTestCommand;

//# sourceMappingURL=lightningTestCommand.js.map
