/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
/* eslint global-require: 0 */
/**
 * Command that provides data import capability.
 */
'use strict';
const path = require('path');
const messages = require(path.join(__dirname, '..', '..', 'lib', 'messages'))();
module.exports = function (_execCommand) {
    return {
        description: messages.getMessage('dataImportCommandCliDescription', [], 'data'),
        longDescription: messages.getMessage('dataImportCommandCliDescriptionLong', [], 'data'),
        help: messages.getMessage('dataImportCommandCliHelp', [], 'data'),
        schema: {
            name: 'dataImportPlanSchema.json',
            flag: 'plan'
        },
        requiresProject: false,
        supportsTargetUsername: true,
        flags: [{
                name: 'sobjecttreefiles',
                char: 'f',
                description: messages.getMessage('dataImportCommandCliFiles', [], 'data'),
                longDescription: messages.getMessage('dataImportCommandCliFilesLong', [], 'data'),
                hasValue: true,
                required: false,
                type: 'filepath',
                array: true,
                xor: ['plan']
            }, {
                name: 'plan',
                char: 'p',
                description: messages.getMessage('dataImportCommandCliPlan', [], 'data'),
                longDescription: messages.getMessage('dataImportCommandCliPlanLong', [], 'data'),
                hasValue: true,
                required: false,
                type: 'filepath'
            }, {
                name: 'contenttype',
                char: 'c',
                description: messages.getMessage('dataImportCommandCliContentType', [], 'data'),
                longDescription: messages.getMessage('dataImportCommandCliContentTypeLong', [], 'data'),
                hasValue: true,
                required: false,
                type: 'string'
            }],
        run(context) {
            const DataImportCommand = require(path.join(__dirname, '..', '..', 'lib', 'data', 'dataImportCommand'));
            const DataImportConfigHelpCommand = require(path.join(__dirname, '..', '..', 'lib', 'data', 'dataImportConfigHelpCommand'));
            const dataImport = context.flags.confighelp ? new DataImportConfigHelpCommand() : new DataImportCommand();
            return _execCommand(dataImport, context);
        }
    };
};

//# sourceMappingURL=data_tree_import.js.map
