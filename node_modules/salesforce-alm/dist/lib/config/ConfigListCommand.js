/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
 */
'use strict';
// Node
const path = require('path');
const SfdxConfigAggregator = require(path.join(__dirname, 'SfdxConfigAggregator'));
const messages = require(path.join(__dirname, '..', 'messages'))();
const logger = require(path.join(__dirname, '..', 'logApi'));
class ListCommand {
    constructor() {
        this.logger = logger.child('config:list');
    }
    validate() {
        return Promise.resolve();
    }
    execute() {
        this.aggregator = new SfdxConfigAggregator();
        return this.aggregator.initialize()
            .then(() => this.aggregator.getConfigInfo().map(c => {
            delete c.path;
            return c;
        }));
    }
    getColumnData() {
        this.logger.styledHeader(this.logger.color.blue('Config'));
        const columns = [
            { key: 'key', label: messages.getMessage('key', [], 'configListCommand') },
            { key: 'value', label: messages.getMessage('value', [], 'configListCommand') }
        ];
        columns.push({ key: 'location', label: messages.getMessage('location', [], 'configListCommand') });
        return columns;
    }
}
module.exports = ListCommand;

//# sourceMappingURL=ConfigListCommand.js.map
